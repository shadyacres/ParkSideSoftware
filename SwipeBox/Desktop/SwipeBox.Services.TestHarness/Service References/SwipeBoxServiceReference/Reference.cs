//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SwipeBox.Services.TestHarness.SwipeBoxServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SwipeBoxServiceReference.ISwipeBoxService")]
    public interface ISwipeBoxService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISwipeBoxService/AddMeeting", ReplyAction="http://tempuri.org/ISwipeBoxService/AddMeetingResponse")]
        bool AddMeeting(int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISwipeBoxService/AddMeeting", ReplyAction="http://tempuri.org/ISwipeBoxService/AddMeetingResponse")]
        System.Threading.Tasks.Task<bool> AddMeetingAsync(int clientId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISwipeBoxServiceChannel : SwipeBox.Services.TestHarness.SwipeBoxServiceReference.ISwipeBoxService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SwipeBoxServiceClient : System.ServiceModel.ClientBase<SwipeBox.Services.TestHarness.SwipeBoxServiceReference.ISwipeBoxService>, SwipeBox.Services.TestHarness.SwipeBoxServiceReference.ISwipeBoxService {
        
        public SwipeBoxServiceClient() {
        }
        
        public SwipeBoxServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SwipeBoxServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SwipeBoxServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SwipeBoxServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddMeeting(int clientId) {
            return base.Channel.AddMeeting(clientId);
        }
        
        public System.Threading.Tasks.Task<bool> AddMeetingAsync(int clientId) {
            return base.Channel.AddMeetingAsync(clientId);
        }
    }
}
